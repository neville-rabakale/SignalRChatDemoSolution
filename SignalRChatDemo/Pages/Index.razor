@page "/"

@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavManager
@implements IAsyncDisposable


<PageTitle>Index</PageTitle>
<div class="form-group">
	<label>
		User: <input @bind="userInput"/>
	</label>
</div>
<div class="form-group">
	<label>
		message: <input @bind="messageInput"/>
	</label>
</div>
<button @onclick="Send" disabled="@(IsConnected == false)">Send</button>

<hr />

<ul>
	@foreach(var item in messages)
	{
		<li>@item</li>
	}
</ul>


@code{

	private HubConnection? hubConnection;
	private List<string> messages = new();
	private string? userInput;
	private string? messageInput;

	protected override async Task OnInitializedAsync()
	{
		hubConnection = new HubConnectionBuilder()
			.WithUrl(NavManager.ToAbsoluteUri("/chathub"))
			.WithAutomaticReconnect()
			.Build();

		//capture message from server
		hubConnection.On<string, string>("RecieveMessage", (user, message) =>
		{
			var formattedMessage = $"{user}: {message}";
			messages.Add(formattedMessage);
			InvokeAsync(StateHasChanged); //telling Blazor to check for new values
		});

		await hubConnection.StartAsync();
	}

	private async Task Send()
	{
		if (hubConnection is not null)
		{
			await hubConnection.SendAsync("SendMessage", userInput, messageInput);
		}
	}

	public bool IsConnected => hubConnection?.State == HubConnectionState.Connected;



	public async ValueTask DisposeAsync()
	{
		if(hubConnection is not null)
		{
			await hubConnection.DisposeAsync();
		}
	}

}
